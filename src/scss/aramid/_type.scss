/******************************************************************************
 * TYPE
 ******************************************************************************/

///////////////////////////////////////////////////////////////////////////////
// DEFAULT CONFIGURATION

$prefix:                  "" !default;
$generate-classes:        true !default;

$fontsizes: (
	'smaller': 							12,
	'small': 								14,
	'base': 								16,
	'big': 									20,
	'bigger': 							24,
	'biggest': 							32,
	'huge': 								46
);


///////////////////////////////////////////////////////////////////////////////
// FUNCTIONS

///////////////////////////////////////////////////////////////////////////////
// VARIABLES

$fontsize-smaller:        (n2rem(fontsize("smaller")));
$fontsize-small:          (n2rem(fontsize("small")));
// $fontsize-base is already defined in _gutter.scss
$fontsize-big:           	(n2rem(fontsize("big")));
$fontsize-bigger:         (n2rem(fontsize("bigger")));
$fontsize-biggest:        (n2rem(fontsize("biggest")));
$fontsize-huge:           (n2rem(fontsize("huge")));


///////////////////////////////////////////////////////////////////////////////
// MIXINS

@mixin v-rhythm($font-size: fontsize("base"),
								$font-size-base: $fontsize-base,
								$line-height: $lineheight-base,
                $scale: 1,
                $compact: false,
                $cap-height: 0.70) {

  $font-size: (n2rem($font-size / $pixels-per-rem ));  // Convert unitless (px) into rem

	// rhythm unit (in rem)
	$rhythm: $line-height * $font-size / $scale;
	$rhythm: $line-height * $font-size-base / $scale; // equals $gutter

	// number of rhythm units that can fit the font-size
	$lines: ceil(($font-size + 0.0001rem) / $rhythm);

	// calculate the new line-height
	$line-height: $rhythm * $lines / $font-size;

	@if $compact { $line-height: $line-height / 2; }

	// calculate the padding to push the text on the baseline (depends on typeface)
	$baseline-distance: ($line-height - $cap-height) * $font-size / 2;

	font-size: $font-size;
	line-height: $line-height;
  margin-top: 0;
	margin-bottom: 0;
	padding-top: $baseline-distance;
	padding-bottom: $baseline-distance;
	margin-bottom: $gutter - (2 * $baseline-distance);
  background-clip: padding-box;

	// TODO: Full debug
  //background-color: rgba(255,0,0,0.075);
}


///////////////////////////////////////////////////////////////////////////////
// CLASSES

@if $generate-classes {

	html {
		font-size: (n2px($pixels-per-rem));  // Ths is one rem
	}

	body {
		font-size: $fontsize-base;
		line-height: $lineheight-base;
	}


	h1,h2,h3,h4,h5,h6,
	p,
	blockquote,
	ul, ol {
		@include v-rhythm();
	}

	h1 { @include v-rhythm(fontsize("huge")); }
	h2 { @include v-rhythm(fontsize("biggest")); }
	h3 { @include v-rhythm(fontsize("bigger"), $compact: true); }
	h4 { @include v-rhythm(fontsize("big")); }
	h5 { @include v-rhythm(fontsize("base")); }
	h6 { @include v-rhythm(fontsize("small")); }

	.small-text { @include v-rhythm(fontsize("small")); }
	.big-text { 	@include v-rhythm(fontsize("big")); }
}
