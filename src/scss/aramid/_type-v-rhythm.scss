/******************************************************************************
 * TYPE
 ******************************************************************************/

/* requires: _type.scss */

///////////////////////////////////////////////////////////////////////////////
// DEFAULT CONFIGURATION

$v-rhythm-baseline-mode: 	true;
// $v-rhythm-baseline-mode: 	false;

$debug-vrhythm-bg: 				true;
$debug-vrhythm-bg: 				false !default;	// draw debug background
$debug-vrhythm-bg-selector: ".wrap:not(.wrap--content)" !default;	// selects bg-debugged elements
$debug-vrhythm-bg-type: 	"stripes" !default;	// "lines" or "stripes"
$debug-vrhythm-bg-color: 	rgba(127, 0, 0, 0.125) !default;

// $debug-vrhythm-block:			true;
$debug-vrhythm-block: 		false !default;	// draw debug background
$debug-vrhythm-block-color:	rgba(0, 0, 255, 0.125) !default;


///////////////////////////////////////////////////////////////////////////////
// FUNCTIONS


///////////////////////////////////////////////////////////////////////////////
// VARIABLES


///////////////////////////////////////////////////////////////////////////////
// MIXINS

// Source: https://www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/

@mixin v-rhythm($font-size: fontsize("base"),
								$font-size-base: $fontsize-base,
								$line-height: $lineheight-base,
                $scale: 1,
                $compact: false,
                $cap-height: 0.70,
								$baseline-mode: $v-rhythm-baseline-mode,
								$lines: -1
								) {

  $font-size: (n2rem($font-size / $pixels-per-rem ));  // Convert unitless (px) into rem

	// rhythm unit (in rem)
	$rhythm: $line-height * $font-size-base / $scale; // equals $gutter

	// number of rhythm units that can fit the font-size
	@if $lines == -1 {
		$lines: ceil(($font-size + 0.0001rem) / $rhythm);
	}

	// calculate the new line-height
	$line-height: $rhythm * $lines / $font-size;

	@if $compact {
		$line-height: $line-height / 2;
		text-transform: uppercase;	// Compact text cannot handle descendings
	}

	font-size: $font-size;
	line-height: $line-height;

	// background-clip: padding-box; // Useless ??
	margin-top: 0; // reset *some undefined* tags

	@if not($baseline-mode) {
		margin-bottom: $gutter;
	}

	// Debug blocks
	@if $debug-vrhythm-block {
		background-color: $debug-vrhythm-block-color;
	}

	// BLACK MAGIC BASELINE

	@if $baseline-mode {

		// calculate the padding to push the text on the baseline (depends on typeface)
		$baseline-distance: ($line-height - $cap-height) * $font-size / 2;

		// calculate the bottom fill
		$bottom-fill: $gutter - (2 * $baseline-distance);

		padding-top: $baseline-distance;
		padding-bottom: $baseline-distance + $bottom-fill;
		margin-bottom: 0;

		// Debug blocks padding
		@if $debug-vrhythm-block {
			box-shadow:
				inset 0 $baseline-distance 0 0 adjust-hue($debug-vrhythm-block-color, 30deg),
				inset 0 (-$baseline-distance - $bottom-fill) 0 0 adjust-hue($debug-vrhythm-block-color, -30deg);
		}
	}

}


///////////////////////////////////////////////////////////////////////////////
// PLACEHOLDERS

%vrhythm--bg-debug {

	@if $debug {

		@if $debug-vrhythm-bg-type == "lines" {

			// Line at bottom
			background-image: repeating-linear-gradient( 0deg,
				$debug-vrhythm-bg-color,
				$debug-vrhythm-bg-color 1px,
				transparent 1px,
				transparent
			);

			background-size: 100% $gutter;
		}

		@elseif $debug-vrhythm-bg-type == "stripes" {

			// Even stripes
			background-image: repeating-linear-gradient( 0deg,
			$debug-vrhythm-bg-color,
			$debug-vrhythm-bg-color $gutter,
			transparent $gutter,
			transparent
			);

			background-size: 100% $gutter-double;
		}

  }
}


///////////////////////////////////////////////////////////////////////////////
// CLASSES

@if $generate-classes {

	.vrhythm-bg-debug { @extend %vrhythm--bg-debug;	}

	// TAGS DEEP OVERRIDE

	p,
	blockquote,
	ul, ol {
		@include v-rhythm();
	}

	h1, .h1 { 			@include v-rhythm(fontsize("huge")); }
	h2, .h2 { 			@include v-rhythm(fontsize("biggest")); }
	h3, .h3 { 			@include v-rhythm(fontsize("bigger"), $compact: true); }
	h4, .h4 {				@include v-rhythm(fontsize("big")); }
	h5, .h5 { 			@include v-rhythm(fontsize("base")); }
	h6, .h6 { 			@include v-rhythm(fontsize("small")); }

	.smaller-text { @include v-rhythm(fontsize("smaller")); }
	.small-text { 	@include v-rhythm(fontsize("small")); }
	.big-text { 		@include v-rhythm(fontsize("big")); }
	.bigger-text { 	@include v-rhythm(fontsize("bigger"), $compact: true); }
	.biggest-text { @include v-rhythm(fontsize("biggest")); }
	.huge-text { 		@include v-rhythm(fontsize("huge")); }
	.giant-text { 	@include v-rhythm(fontsize("giant")); }
	.insane-text { 	@include v-rhythm(fontsize("insane")); }

	#{$debug-vrhythm-bg-selector} { @extend %vrhythm--bg-debug; }

}
