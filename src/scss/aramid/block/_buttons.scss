@if module('buttons') {

/******************************************************************************
 * BUTTONS
 ******************************************************************************/

////////////////////////////////////////////////////////////////////////////////
// CONFIGURATION

$btn-color-default:            #888;
$btn-color-default-hover:      #333 !default;
$btn-color-default-active:     black !default;


////////////////////////////////////////////////////////////////////////////////
// FUNCTIONS


////////////////////////////////////////////////////////////////////////////////
// MIXINS

@mixin button(
  $size: 'base',
  $background: $btn-color-default,
  $color: white,
  $padding-vertical: $gutter-half,
  $padding-horizontal: $gutter-half
) {

  @include v-block( $fontsize: $size );

  background-color: $background;
  color: $color;
  text-align: center;

  padding-top: $padding-vertical;
  padding-bottom: $padding-vertical;
  padding-left: $padding-horizontal;
  padding-right: $padding-horizontal;

  margin-bottom: 0;
  margin-bottom: $gutter;

  transition: all duration("fast");
}


////////////////////////////////////////////////////////////////////////////////
// CLASSES

@if $generate-classes {

  button {
    /* Reset button */
    border: none;
    background-color: inherit;
    color: inherit;
  }

  .btn {
    cursor: pointer;
  }

  ///*button, */.btn {
  button, .btn {
    @include button;

    @include hover {
      background-color: $btn-color-default-active;
    }

    // DEMO
    text-transform: uppercase;

  }

  @each $size in $fontsizes {
    $s: nth($size, 1);
    .btn--#{$s} { @include button($s); }
    // @warn "$s: " + $s
  }


  @if module('colors') && module('grays') {

    // PLACEHOLDERS

    // Color buttons

    %btn--primary {
      background-color: color("primary");
      @include hover { background-color: color("primary","darker"); }
    }
    %btn--secondary {
      background-color: color("secondary");
      @include hover { background-color: color("secondary","darker"); }
    }
    %btn--ternary {
      background-color: color("ternary");
      @include hover { background-color: color("ternary","darker"); }
    }

    // Transparent buttons

    %btn--transparent {
      background-color: transparent;
      color: $btn-color-default;

      @include hover {
        background-color: transparent;
        color: $btn-color-default-hover;
      }

      @each $color in $colors {
    		$key: nth($color, 1);

        &.btn--#{$key} {
          color: color(#{$key}, "darker");
          @include hover { background-color: transparent; }
        }
    	}

      &[class*="ary"] {
        // @include hover { background-color: transparent; }
      }

      &.btn--primary {
        color: color("primary");
        @include hover { color: color("primary", "darker"); background-color: transparent; }
      }
      &.btn--secondary {
        color: color("secondary");
        @include hover { color: color("secondary", "darker"); background-color: transparent; }
      }
      &.btn--ternary {
        color: color("ternary");
        @include hover { color: color("ternary", "darker"); background-color: transparent; }
      }
    }

    // Border buttons

    %btn--border {
      box-shadow: inset 0 0 0 $gutter-quarter / 2 $btn-color-default;

      @include hover {
        background-color: $btn-color-default;
        color: white;
      }

      &.btn--primary {
        box-shadow: inset 0 0 0 $gutter-quarter / 2 color("primary");
        @include hover { background-color: color("primary"); color: white; }
      }
      &.btn--secondary {
        box-shadow: inset 0 0 0 $gutter-quarter / 2 color("secondary");
        @include hover { background-color: color("secondary"); color: white; }
      }
      &.btn--ternary {
        box-shadow: inset 0 0 0 $gutter-quarter / 2 color("ternary");
        @include hover { background-color: color("ternary"); color: white; }
      }
    }

    // Hollow buttons

    %btn--hollow {
      @extend %btn--transparent;
      @extend %btn--border;
    }


    // CLASSES

    @each $color in $colors {
  		$key: nth($color, 1);

      // ex:
      // .btn--primary {     @extend %btn--primary; }
      .btn--#{$key} {     @extend %btn--#{$key}; }
  	}

    .btn--transparent { @extend %btn--transparent; }
    .btn--hollow {      @extend %btn--hollow; }
  }

}


} /* END Module */
